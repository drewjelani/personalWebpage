{"version":3,"sources":["serviceWorker.js","middleware/monitorReducer.js","middleware/logger.js","reducers/rootReducer.js","reducers/reducer.js","components/header.js","pages/home.js","pages/career.js","components/images.js","components/entries.js","components/prettyDate.js","components/entryWithImage.js","utils/dateConverters.js","pages/family.js","pages/about.js","App.js","actions/action.js","index.js","middleware/configureStore.js"],"names":["Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","group","type","info","result","getState","groupEnd","combineReducers","simpleReducer","payload","Header","content","Tuple","of","key","to","className","linkSpacing","map","index","right","React","Component","left","this","Home","Career","transformToUrl","url","split","images","DrewUpperHalfFromEngagementShoot","BBellyOutside","BInRiverPregnant","JimWithLucySleep","InZanzibarAgainstTheWall","CannonBeachAndPreggo","entryText","BWithBellyOutside","entries","text","caption","alt","date","toPrettyDate","getMonthString","getMonth","getDate","getFullYear","month","PrettyDate","props","Date","EntryWithImage","style","src","height","width","altImage","convertDateToArchivedVersion","appendMonthToYear","separateDateToParts","values","Family","filter","entry","filterEntriesByDate","sort","entryCompareToDay","mapEntriesToReactElements","reduceToDistincts","entryCompareTo","i","onClick","setState","tracker","Set","forEach","dateString","has","add","push","a","b","parseInt","parseDateYearAsInt","monthMap","January","February","March","April","May","June","July","August","September","October","November","December","monthA","parseDateMonth","entry_date","connect","dispatch","About","App","simpleAction","event","exact","path","component","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","compose","rootReducer","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e57f9ad8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n    reducer,\n    initialState,\n    enhancer\n) => {\n    const monitoredReducer = (state, action) => {\n        const start = performance.now()\n        const newState = reducer(state, action)\n        const end = performance.now()\n        const diff = round(end - start)\n\n        console.log('reducer process time:', diff)\n\n        return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n\nexport default logger","import { combineReducers } from 'redux';\nimport simpleReducer from './reducer';\n\nexport default combineReducers({\n    simpleReducer\n});","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'SIMPLE_ACTION':\n            return {\n                result: action.payload\n            };\n        case 'ARCHIVED_DATE':\n            return {\n                result: action.payload\n            };\n        default:\n            return state\n    }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Header extends React.Component {\n    render() {\n        const linkSpacing = \"p-4\";\n        const textTreatment = \"text-dark\";\n        const headerLinkStyling = linkSpacing + \" \" + textTreatment;\n\n        const content = [\n            Tuple.of(3, key => <Link to='/about' className={headerLinkStyling} key={key}>About</Link>),\n            Tuple.of(3, key => <Link to=\"/career\" className={headerLinkStyling} key={key}>Career</Link>),\n            Tuple.of(3, key => <Link to=\"/family\" className={headerLinkStyling} key={key}>Family</Link>)];\n\n        return <div\n            className='d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm'>\n            <h5 className='my-2 mr-md-auto font-weight-normal'>\n                <Link to=\"/\" className={textTreatment}>\n                    Drew Jelani\n                </Link>\n            </h5>\n            <nav className='my-2 my-md-0 mr-md-3'>\n                {content.map((content, index) => content.right(index))}\n            </nav>\n        </div>\n    }\n}\n\nclass Tuple {\n    constructor(left, right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    static of(left, right) {\n        return new Tuple(left, right);\n    }\n}\n\nexport default Header;","import React from 'react';\nimport Header from \"../components/header\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Header/>\n                <div className={'container'}>\n                    <p>\n                        This is the start of Drew's page.  Coming soon!\n                    </p>\n                </div>\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport Header from \"../components/header\";\n\nconst Career = () => {\n    return (\n        <div>\n            <Header/>\n            <div className='container'>\n                <p>SDE</p>\n            </div>\n        </div>\n    )\n};\n\nexport default Career;","const transformToUrl = url => 'https://drive.google.com/uc?id=' + url.split(\"/\")[5];\n\nconst images = {\n    DrewUpperHalfFromEngagementShoot: 'https://drive.google.com/uc?id=1ff0sOmv2hTqsOluyOnPrTXrByni-KuD5',\n    BBellyOutside: 'https://drive.google.com/uc?id=1U3eAPI-iNtGXFMFrIVf_lE8gJH624drP',\n    BInRiverPregnant: transformToUrl('https://drive.google.com/file/d/1C8lgupATZeA8fuEhEIiUWekFG5lcMUk0/view?usp=sharing'),\n    JimWithLucySleep: transformToUrl('https://drive.google.com/file/d/1uq0JrKQh_YddApPfPYZ0kq9E-awGc6F9/view?usp=sharing'),\n    InZanzibarAgainstTheWall: transformToUrl(\"https://drive.google.com/file/d/13cUJWeOsY_894WhqzOc02rBkWKanFeH0/view?usp=sharing\"),\n    CannonBeachAndPreggo: transformToUrl('https://drive.google.com/file/d/1n8a1mokNTWjl6WMErYKOKuBB16ARfU2p/view?usp=sharing')\n};\n\nexport default images;","import images from \"./images\";\n\nconst entryText = {\n    BWithBellyOutside: \"It's getting close, Amaiya is almost here!  This is the first entry into what I hope is a record of our \" +\n        \"family's evolution.  Amaiya, you're are the start of something great.  My hope is you'll look back on these posts \" +\n        \"and see it all for yourself.\",\n    BInRiverPregnant: \"We decided to head down to Arcata to take one last family vacation before Amaiya arrives. We were able to \" +\n        \"get quality time in with Caelin and Lucy.\",\n    JimWithLucySleep: \"During our trip, I got PLENTY of opportunities to practice my shooting skills.  It was a great time being able \" +\n        \"to both work on something I truly enjoy and capture a few beautiful moments of the family.\",\n    InZanzibarAgainstTheWall: \"B and I took a trip to Africa.  It was a trip I'd wanted to take for some time, and I was glad to \" +\n        \"share the experience with her.  We spent time in Kenya and Tanzania.\",\n    CannonBeachAndPreggo: \"B and I took our last trip with just the two of us to the Oregon Coast. We spent time in Cannon Beach, Long Beach, \" +\n        \"and Manzanita.  In Cannon Beach, I think we've found our annual family vacation spot!\"\n};\n\nconst captions = {\n    BWithBellyOutside: \"Mama sitting outside admiring her bump\",\n    BInRiverPregnant: \"B in the river, like the Arcata hippy sexy mama she is. ❤️\",\n    JimWithLucySleep: \"Jim happily holding Lucy as she is sound asleep.\",\n    InZanzibarAgainstTheWall: \"My and my patna doing what patnas do.\",\n    CannonBeachAndPreggo: \"B posing in front of the coffee shop looking lovely!\"\n};\n\nconst altImage = {\n    BWithBellyOutside: \"BWithBellyOutside\",\n    BInRiverPregnant: \"BInTheRiver\",\n    JimWithLucySleep: \"JimHoldingLucyWhileSleep\",\n    InZanzibarAgainstTheWall: \"A&BinZanzibar\",\n    CannonBeachAndPreggo: \"B posing before coffee\"\n};\n\nconst entries = [\n    {\n        url:images.BBellyOutside, text:entryText.BWithBellyOutside, caption:captions.BWithBellyOutside, alt:altImage.BWithBellyOutside, date:\"July 25, 2020\"\n    },\n    {\n        url:images.BInRiverPregnant, text:entryText.BInRiverPregnant, caption:captions.BInRiverPregnant, alt:altImage.BInRiverPregnant, date:\"August 25, 2020\"\n    },\n    {\n        url:images.JimWithLucySleep, text:entryText.JimWithLucySleep, caption:captions.JimWithLucySleep, alt:altImage.JimWithLucySleep, date:\"August 26, 2020\"\n    },\n    {\n        url:images.InZanzibarAgainstTheWall, text:entryText.InZanzibarAgainstTheWall, caption:captions.InZanzibarAgainstTheWall, alt:altImage.InZanzibarAgainstTheWall, date:\"October 4, 2019\"\n    },\n    {\n        url:images.CannonBeachAndPreggo, text:entryText.CannonBeachAndPreggo, caption:captions.CannonBeachAndPreggo, alt:altImage.CannonBeachAndPreggo, date:\"August 31, 2020\"\n    }\n];\n\nexport default entries;","import React from 'react';\n\nconst PrettyDate = props => {\n    const date = new Date();\n\n    return (\n        <div>\n            <p>{props.date != null ? props.date : toPrettyDate(date)}</p>\n        </div>\n    )\n};\n\nconst toPrettyDate = date => {\n    return getMonthString(date.getMonth() + 1) + \" \" + date.getDate() + \", \" + date.getFullYear();\n};\n\nconst getMonthString = month => {\n   switch (month) {\n        case 1: return \"January\";\n       case 2: return \"February\";\n       case 3: return \"March\";\n       case 4: return \"April\";\n       case 5: return \"May\";\n       case 6: return \"June\";\n       case 7: return \"July\";\n       case 8: return \"August\";\n       case 9: return \"September\";\n       case 10: return \"October\";\n       case 11: return \"November\";\n       case 12: return \"December\";\n       default: return \"ERROR MONTH\"\n    }\n};\n\nexport default PrettyDate;","import React from 'react';\nimport PrettyDate from \"./prettyDate\";\n\nconst EntryWithImage = props => {\n    return (\n        <div>\n            <hr/>\n            <PrettyDate date={props.date}/>\n            <div>\n                <span style={{\"textAlign\": \"center\", \"display\": \"block\"}}>\n                    <img src={props.url} className=\"rounded\" height=\"50%\" width=\"50%\" alt={props.altImage}/>\n                </span>\n                <span style={{\"textAlign\": \"center\", \"display\": \"block\", \"fontSize\":\"60%\"}}>\n                    {props.caption}\n                </span>\n            </div>\n            <div className='container my-4'>\n                <p style={{\"fontSize\":\"80%\"}}>\n                    {props.text}\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default EntryWithImage;","import React from \"react\";\n\nexport const convertDateToArchivedVersion = date => appendMonthToYear(separateDateToParts(date));\n\nconst separateDateToParts = date => date.split(\" \");\n\nconst appendMonthToYear = values => values[0] + \" \" + values[2];\n\nexport const PrettyDate = props => {\n    const date = new Date();\n\n    return (\n        <div>\n            <p>{props.date != null ? props.date : toPrettyDate(date)}</p>\n        </div>\n    )\n};\n\nexport const toPrettyDate = date => {\n    return getMonthString(date.getMonth() + 1) + \" \" + date.getDate() + \", \" + date.getFullYear();\n};\n\nconst getMonthString = month => {\n    switch (month) {\n        case 1: return \"January\";\n        case 2: return \"February\";\n        case 3: return \"March\";\n        case 4: return \"April\";\n        case 5: return \"May\";\n        case 6: return \"June\";\n        case 7: return \"July\";\n        case 8: return \"August\";\n        case 9: return \"September\";\n        case 10: return \"October\";\n        case 11: return \"November\";\n        case 12: return \"December\";\n        default: return \"ERROR MONTH\"\n    }\n};\n\nexport const getYearFromPrettyDate = date => date.split(\" \")[2];","import React, {Component} from 'react';\nimport Header from \"../components/header\";\nimport entries from \"../components/entries\";\nimport EntryWithImage from \"../components/entryWithImage\";\nimport {convertDateToArchivedVersion, toPrettyDate} from \"../utils/dateConverters\";\nimport {connect} from \"react-redux\";\n\nclass Family extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: toPrettyDate(new Date())};\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-md-8 blog-main'>\n                            {entries\n                                .filter(entry => filterEntriesByDate(entry, this.state.date))\n                                .sort(entryCompareToDay)\n                                .map(mapEntriesToReactElements)}\n                        </div>\n                        <aside className='col-4-md blog-sidebar'>\n                            <div className='p-3'>\n                                <h3>Archives</h3>\n                                <ul>\n                                    {reduceToDistincts(entries)\n                                        .sort(entryCompareTo)\n                                        .map((entry, i) => <li\n                                        key={i} onClick={() => this.setState({date: entry.date})}>{convertDateToArchivedVersion(entry.date)}</li>)}\n                                </ul>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst reduceToDistincts = entries => {\n    const tracker = new Set();\n    const result = [];\n\n    entries.forEach(entry => {\n        const dateString = convertDateToArchivedVersion(entry.date);\n\n        if(!tracker.has(dateString)){\n            tracker.add(dateString);\n            result.push(entry);\n        }\n    });\n\n    return result;\n};\n\nconst entryCompareToDay = (a, b) => parseInt(b.date.split(\" \")[1]) - parseInt(a.date.split(\" \")[1]);\n\nconst entryCompareTo = (a, b) => {\n    const yearA = parseDateYearAsInt(a);\n    const yearB = parseDateYearAsInt(b);\n\n    if(yearA < yearB) return 1;\n\n    const monthMap = {\n        January: 0,\n        February: 1,\n        March: 2,\n        April: 3,\n        May: 4,\n        June: 5,\n        July: 6,\n        August: 7,\n        September: 8,\n        October: 9,\n        November: 10,\n        December: 11\n    };\n\n\n    const monthA = monthMap[parseDateMonth(a)];\n    const monthB = monthMap[parseDateMonth(b)];\n\n    return monthB - monthA;\n};\n\nconst parseDateYearAsInt = entry => parseInt(entry.date.split(\" \")[2]);\nconst parseDateMonth = entry => entry.date.split(\" \")[0];\n\nconst filterEntriesByDate = (entry, date) => {\n    const entry_date = entry.date;\n    const year = convertDateToArchivedVersion(entry_date);\n    return year === convertDateToArchivedVersion(date);\n};\n\nconst mapEntriesToReactElements = (entry, i) =>\n    <EntryWithImage key={i} url={entry.url} text={entry.text}\n                    caption={entry.caption} alt={entry.alt}\n                    date={entry.date}/>;\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Family);","import React from 'react';\nimport Header from \"../components/header\";\nimport images from \"../components/images\";\n\nconst About = () => {\n    return (\n        <div>\n            <Header/>\n            <div className=\"container\">\n                <span style={{\"textAlign\":\"center\", \"display\":\"block\"}}>\n                    <img src={images.DrewUpperHalfFromEngagementShoot} className=\"rounded center\" height=\"60%\" width=\"60%\" alt=\"Drew Upper Engagement\"/>\n                </span>\n            </div>\n        </div>\n    )\n};\n\nexport default About;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { action } from './actions/action';\nimport Home from \"./pages/home\";\nimport Career from \"./pages/career\";\nimport Family from \"./pages/family\";\nimport About from \"./pages/about\";\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\n\nclass App extends Component {\n  simpleAction = (event) => {\n    this.props.simpleAction();\n  };\n\n  render() {\n    return (\n        <div>\n          <Router>\n            <div>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/career\" component={Career}/>\n              <Route path=\"/family\" component={Family}/>\n              <Route path=\"/about\" component={About}/>\n            </div>\n          </Router>\n        </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(action())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const action = () => dispatch => {\n    dispatch({\n        type: 'SIMPLE_ACTION',\n        payload: 'result_of_simple_action'\n    })\n}","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './middleware/configureStore'\nimport App from \"./App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from './monitorReducer'\nimport loggerMiddleware from './logger'\nimport rootReducer from '../reducers/rootReducer'\n\nexport default function configureStore(preloadedState) {\n    const middlewares = [loggerMiddleware, thunkMiddleware]\n    const middlewareEnhancer = applyMiddleware(...middlewares)\n\n    const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n    const composedEnhancers = compose(...enhancers)\n\n    return createStore(rootReducer, preloadedState, composedEnhancers)\n}"],"sourceRoot":""}