{"version":3,"sources":["serviceWorker.js","components/header.js","pages/home.js","pages/career.js","components/images.js","components/prettyDate.js","components/entryWithImage.js","components/entries.js","pages/family.js","pages/about.js","utils/routing.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","content","Tuple","of","key","to","className","linkSpacing","map","index","right","React","Component","left","this","Home","Career","images","DrewUpperHalfFromEngagementShoot","BBellyOutside","toPrettyDate","date","getMonthString","getMonth","getDate","getFullYear","month","PrettyDate","props","Date","EntryWithImage","style","src","url","height","width","alt","altImage","caption","text","entries","BWithBellyOutside","Family","About","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c1f04a4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Header extends React.Component {\n    render() {\n        const linkSpacing = \"p-4\";\n        const textTreatment = \"text-dark\";\n        const headerLinkStyling = linkSpacing + \" \" + textTreatment;\n\n        const content = [\n            Tuple.of(3, key => <Link to='/about' className={headerLinkStyling} key={key}>About</Link>),\n            Tuple.of(3, key => <Link to=\"/career\" className={headerLinkStyling} key={key}>Career</Link>),\n            Tuple.of(3, key => <Link to=\"/family\" className={headerLinkStyling} key={key}>Family</Link>)];\n\n        return <div\n            className='d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm'>\n            <h5 className='my-2 mr-md-auto font-weight-normal'>\n                <Link to=\"/\" className={textTreatment}>\n                    Drew Jelani\n                </Link>\n            </h5>\n            <nav className='my-2 my-md-0 mr-md-3'>\n                {content.map((content, index) => content.right(index))}\n            </nav>\n        </div>\n    }\n}\n\nclass Tuple {\n    constructor(left, right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    static of(left, right) {\n        return new Tuple(left, right);\n    }\n}\n\nexport default Header;","import React from 'react';\nimport Header from \"../components/header\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Header/>\n                <div className={'container'}>\n                    <p>\n                        This is the start of Drew's page.  Coming soon!\n                    </p>\n                </div>\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport Header from \"../components/header\";\n\nconst Career = () => {\n    return (\n        <div>\n            <Header/>\n            <div className='container'>\n                <p>SDE</p>\n            </div>\n        </div>\n    )\n};\n\nexport default Career;","const images = {\n    DrewUpperHalfFromEngagementShoot: 'https://drive.google.com/uc?id=1ff0sOmv2hTqsOluyOnPrTXrByni-KuD5',\n    BBellyOutside: 'https://drive.google.com/uc?id=1U3eAPI-iNtGXFMFrIVf_lE8gJH624drP'\n};\n\nexport default images;","import React from 'react';\n\nconst PrettyDate = props => {\n    const date = new Date();\n\n    return (\n        <div>\n            <p>{props.date != null ? props.date : toPrettyDate(date)}</p>\n        </div>\n    )\n};\n\nconst toPrettyDate = date => {\n    return getMonthString(date.getMonth() + 1) + \" \" + date.getDate() + \", \" + date.getFullYear();\n};\n\nconst getMonthString = month => {\n   switch (month) {\n        case 1: return \"January\";\n       case 2: return \"February\";\n       case 3: return \"March\";\n       case 4: return \"April\";\n       case 5: return \"May\";\n       case 6: return \"June\";\n       case 7: return \"July\";\n       case 8: return \"August\";\n       case 9: return \"September\";\n       case 10: return \"October\";\n       case 11: return \"November\";\n       case 12: return \"December\";\n       default: return \"ERROR MONTH\"\n    }\n};\n\nexport default PrettyDate;","import React from 'react';\nimport PrettyDate from \"./prettyDate\";\n\nconst EntryWithImage = props => {\n    return (\n        <div>\n            <hr/>\n            <PrettyDate date={props.date}/>\n            <div>\n                <span style={{\"textAlign\": \"center\", \"display\": \"block\"}}>\n                    <img src={props.url} className=\"rounded\" height=\"50%\" width=\"50%\" alt={props.altImage}/>\n                </span>\n                <span style={{\"textAlign\": \"center\", \"display\": \"block\", \"fontSize\":\"60%\"}}>\n                    {props.caption}\n                </span>\n            </div>\n            <div className='container my-4'>\n                <p style={{\"fontSize\":\"80%\"}}>\n                    {props.text}\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default EntryWithImage;","import images from \"./images\";\nimport EntryWithImage from \"./entryWithImage\";\nimport React from \"react\";\n\nconst entryText = {\n    BWithBellyOutside: \"It's getting close, Amaiya is almost here!  This is the first entry into what I hope is a record of our \" +\n        \"family's evolution.  Amaiya, you're are the start of something great.  My hope is you'll look back on these posts \" +\n        \"and see it all for yourself.\"\n};\n\nconst captions = {\n    BWithBellyOutside: \"Mama sitting outside admiring her bump\"\n};\n\nconst altImage = {\n    BWithBellyOutside: \"BWithBellyOutside\"\n};\n\nconst entries = {\n BWithBellyOutside: <EntryWithImage url={images.BBellyOutside} text={entryText.BWithBellyOutside} caption={captions.BWithBellyOutside} alt={altImage.BWithBellyOutside} date={\"July 25, 2020\"}/>\n};\n\nexport default entries;","import React from 'react';\nimport Header from \"../components/header\";\nimport entries from \"../components/entries\";\n\nconst Family = () => {\n    return (\n        <div>\n            <Header/>\n            <div className='container'>\n                {entries.BWithBellyOutside}\n            </div>\n        </div>\n    )\n};\n\nexport default Family;","import React from 'react';\nimport Header from \"../components/header\";\nimport images from \"../components/images\";\n\nconst About = () => {\n    return (\n        <div>\n            <Header/>\n            <div className=\"container\">\n                <span style={{\"textAlign\":\"center\", \"display\":\"block\"}}>\n                    <img src={images.DrewUpperHalfFromEngagementShoot} className=\"rounded center\" height=\"60%\" width=\"60%\" alt=\"Drew Upper Engagement\"/>\n                </span>\n            </div>\n        </div>\n    )\n};\n\nexport default About;","import Home from \"../pages/home\";\nimport Career from \"../pages/career\";\nimport Family from \"../pages/family\";\nimport About from \"../pages/about\";\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\nimport React from \"react\";\n\nconst routing = <Router>\n    <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/career\" component={Career} />\n        <Route path=\"/family\" component={Family} />\n        <Route path=\"/about\" component={About} />\n    </div>\n</Router>;\n\nexport default routing;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport routing from './utils/routing';\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}